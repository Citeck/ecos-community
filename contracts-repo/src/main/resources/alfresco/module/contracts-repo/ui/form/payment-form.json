{
  "id": "payment-form",
  "formKey": "alf_payments:payment",
  "title": {
    "en": "Payment form"
  },
  "description": {},
  "customModule": null,
  "typeRef": "",
  "width": "default",
  "i18n": {
    "ru": {
      "Several budgets": "Несколько бюджетов",
      "product": "Продукт",
      "Cancel": "Отмена",
      "Finance": "Финансы",
      "Title": "Заголовок",
      "Create invoice": "Создать счет",
      "Date": "Дата",
      "Single budget initial amount": "Сумма",
      "service": "Услуга",
      "Documents": "Документы",
      "Currency": "Валюта",
      "Generate": "Сгенерировать",
      "Create": "Создать",
      "Budget item": "Статья бюджета",
      "Save": "Сохранить",
      "Main": "Основное",
      "Other": "Остальное"
    },
    "en": {
      "Several budgets": "Several budgets",
      "product": "Product",
      "Cancel": "Cancel",
      "Finance": "Finance",
      "Title": "Title",
      "Create invoice": "Create invoice",
      "Date": "Date",
      "Single budget initial amount": "Single budget initial amount",
      "service": "Service",
      "Documents": "Documents",
      "Currency": "Currency",
      "Generate": "Generate",
      "Create": "Create",
      "Budget item": "Budget item",
      "Save": "Save",
      "Main": "Main",
      "Other": "Other"
    }
  },
  "definition": {
    "components": [
      {
        "label": {
          "ru": "Panel"
        },
        "scrollableContent": true,
        "key": "panel3",
        "type": "panel",
        "input": false,
        "components": [
          {
            "type": "panel",
            "input": false,
            "components": [
              {
                "type": "columns",
                "input": false,
                "columns": [
                  {
                    "type": "column",
                    "md": 4,
                    "index": 0,
                    "input": false,
                    "components": [
                      {
                        "type": "selectJournal",
                        "clearOnHide": false,
                        "input": true,
                        "hideCreateButton": true,
                        "journalId": "contract-agreements",
                        "key": "payments_basis",
                        "label": "payments:basis",
                        "isSelectedValueAsLink": false,
                        "properties": {
                          "attribute": "payments:basis"
                        },
                        "presetFilterPredicatesJs": null
                      }
                    ],
                    "key": "column1",
                    "hideOnChildrenHidden": true,
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  },
                  {
                    "type": "column",
                    "md": 4,
                    "index": 1,
                    "input": false,
                    "components": [
                      {
                        "type": "selectJournal",
                        "clearOnHide": false,
                        "input": true,
                        "journalId": "budget-items",
                        "key": "payments_budgetItem",
                        "label": "Budget item",
                        "isSelectedValueAsLink": false,
                        "properties": {
                          "attribute": "payments:budgetItem"
                        },
                        "presetFilterPredicatesJs": null
                      }
                    ],
                    "key": "column2",
                    "hideOnChildrenHidden": true,
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  },
                  {
                    "components": [
                      {
                        "label": "payments:paymentFor",
                        "clearOnHide": false,
                        "dataSrc": "custom",
                        "data": {
                          "custom": "values = [\r\n{label:'Заказчика', value:'client'},\r\n{label:'Исполнителя', value:'performer'}\r\n]"
                        },
                        "defaultValue": "",
                        "refreshOn": [
                          "paymentsBasis"
                        ],
                        "calculateValue": "const {paymentsBasis = {}} = data;\r\nconst {contractWith = \"\"} = paymentsBasis;\r\n\r\nif (paymentsBasis && contractWith) {\r\n    if (contractWith == 'Исполнителем') {\r\n        value = 'performer';\r\n    }\r\n    if (contractWith == 'Заказчиком') {\r\n        value = 'client';\r\n    }\r\n}",
                        "allowCalculateOverride": true,
                        "validate": {
                          "required": true
                        },
                        "key": "payments_paymentFor",
                        "properties": {
                          "attribute": "payments:paymentFor"
                        },
                        "type": "ecosSelect",
                        "input": true
                      }
                    ],
                    "type": "column",
                    "md": 4,
                    "key": "column3",
                    "hideOnChildrenHidden": true,
                    "index": 2,
                    "input": false,
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  }
                ],
                "key": "columns2",
                "hideOnChildrenHidden": true
              },
              {
                "type": "horizontalLine",
                "key": "horizontalLine2",
                "clearOnHide": false,
                "input": true
              },
              {
                "defaultValue": "",
                "type": "textarea",
                "clearOnHide": false,
                "input": true,
                "key": "payments_paymentPurpose",
                "label": "payments:paymentPurpose",
                "rows": 2,
                "properties": {
                  "attribute": "payments:paymentPurpose"
                }
              },
              {
                "type": "horizontalLine",
                "key": "horizontalLine4",
                "clearOnHide": false,
                "input": true
              },
              {
                "type": "columns",
                "input": false,
                "columns": [
                  {
                    "type": "column",
                    "md": 4,
                    "index": 0,
                    "input": false,
                    "components": [
                      {
                        "label": {
                          "ru": "payments:payer"
                        },
                        "clearOnHide": false,
                        "journalId": "legal-entities",
                        "computed": {
                          "valueDisplayName": "disp = value.load('idocs:fullOrganizationName')"
                        },
                        "refreshOn": "payments_basis",
                        "clearOnRefresh": true,
                        "calculateValue": "const {paymentsBasis = {}} = data;\r\nconst {type = \"\",\r\n       agreementLegalEntity = \"\",\r\n       legalEntity = \"\"\r\n} = paymentsBasis;\r\nif (paymentsBasis) {\r\n    if ((type == \"contracts:agreement\" || type == \"contracts:supplementaryAgreement\") && agreementLegalEntity)  {\r\n        value = agreementLegalEntity;\r\n    } else if (type == \"contracts:closingDocument\" && legalEntity) {\r\n        value = legalEntity;  \r\n    }\r\n}",
                        "allowCalculateOverride": true,
                        "validate": {
                          "required": true
                        },
                        "key": "payments_payer",
                        "properties": {
                          "attribute": "payments:payer"
                        },
                        "logic": [
                          {
                            "name": "disable_on",
                            "trigger": {
                              "type": "javascript",
                              "javascript": "const {paymentsBasis = {}} = data || {};\r\nconst {agreementLegalEntity = null} = paymentsBasis || {};\r\nif (agreementLegalEntity == null){\r\n  result = false;\r\n} else if (paymentsBasis && agreementLegalEntity !== null) {\r\n    result = true;\r\n} "
                            },
                            "actions": [
                              {
                                "name": "disable_on",
                                "property": {
                                  "label": "Disabled",
                                  "type": "boolean",
                                  "value": "disabled"
                                },
                                "state": "true",
                                "type": "property"
                              },
                              {
                                "name": "set_value",
                                "type": "value",
                                "value": "const {paymentsBasis = {}} = data || {};\r\nconst {agreementLegalEntity = null} = paymentsBasis || {};\r\nif (agreementLegalEntity == null){\r\n  value = null;\r\n} else if (paymentsBasis && agreementLegalEntity !== null) {\r\n    value = agreementLegalEntity;\r\n} "
                              }
                            ]
                          }
                        ],
                        "type": "selectJournal",
                        "input": true,
                        "isSelectedValueAsLink": false
                      }
                    ],
                    "key": "column",
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  },
                  {
                    "type": "column",
                    "md": 4,
                    "index": 1,
                    "input": false,
                    "components": [
                      {
                        "data": {
                          "url": "/citeck/ecos/records/query"
                        },
                        "defaultValue": "",
                        "type": "ecosSelect",
                        "clearOnHide": false,
                        "input": true,
                        "customDefaultValue": "value = 'cashless';",
                        "key": "payments_paymentArrangement",
                        "label": "payments:paymentArrangement",
                        "properties": {
                          "attribute": "payments:paymentArrangement"
                        }
                      }
                    ],
                    "key": "column",
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  },
                  {
                    "components": [
                      {
                        "label": "payments:paymentNumber",
                        "defaultValue": "",
                        "validate": {
                          "required": true
                        },
                        "key": "payments_paymentNumber",
                        "properties": {
                          "attribute": "payments:paymentNumber"
                        },
                        "logic": [
                          {
                            "name": "generate_on",
                            "trigger": {
                              "simple": {
                                "show": true,
                                "eq": "true",
                                "when": "Generate"
                              },
                              "type": "simple"
                            },
                            "actions": [
                              {
                                "name": "disable_on",
                                "property": {
                                  "label": "Disabled",
                                  "type": "boolean",
                                  "value": "disabled"
                                },
                                "state": "true",
                                "type": "property"
                              },
                              {
                                "name": "required_off",
                                "property": {
                                  "label": "Required",
                                  "type": "boolean",
                                  "value": "validate.required"
                                },
                                "state": "false",
                                "type": "property"
                              },
                              {
                                "name": "value_gen",
                                "type": "value",
                                "value": "if (instance.options.formMode === 'CREATE') {\n  value = '-';\n}"
                              }
                            ]
                          },
                          {
                            "name": "generate_off",
                            "trigger": {
                              "simple": {
                                "show": true,
                                "eq": "false",
                                "when": "Generate"
                              },
                              "type": "simple"
                            },
                            "actions": []
                          }
                        ],
                        "type": "textfield",
                        "input": true
                      },
                      {
                        "label": "Generate",
                        "defaultValue": true,
                        "key": "Generate",
                        "customConditional": "show = instance.options.formMode === 'CREATE'",
                        "type": "checkbox",
                        "input": true
                      }
                    ],
                    "type": "column",
                    "md": 4,
                    "key": "column",
                    "index": 2,
                    "input": false,
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  }
                ],
                "key": "columns3"
              },
              {
                "type": "horizontalLine",
                "key": "horizontalLine3",
                "clearOnHide": false,
                "input": true
              },
              {
                "label": {
                  "ru": "Columns"
                },
                "columns": [
                  {
                    "type": "column",
                    "md": 4,
                    "index": 0,
                    "input": false,
                    "components": [
                      {
                        "label": {
                          "ru": "payments:beneficiary"
                        },
                        "clearOnHide": false,
                        "journalId": "idocs-contractor",
                        "refreshOn": "payments_basis",
                        "clearOnRefresh": true,
                        "calculateValue": "const {paymentsBasis = {}} = data;\r\nconst {contractor = \"\"} = paymentsBasis;\r\nif (!_.isEmpty(paymentsBasis) && !_.isEmpty(contractor)) {\r\n    value = contractor; \r\n} ",
                        "allowCalculateOverride": true,
                        "validate": {
                          "required": true
                        },
                        "key": "payments_beneficiary",
                        "properties": {
                          "attribute": "payments:beneficiary"
                        },
                        "logic": [
                          {
                            "name": "disabled_on",
                            "trigger": {
                              "type": "javascript",
                              "javascript": "const {paymentsBasis} = data || {};\r\nconst {contractor} = paymentsBasis || null;\r\nif (contractor == null){\r\n  result = false;\r\n} else if (paymentsBasis && contractor !== null) {\r\n    result = true;\r\n} "
                            },
                            "actions": [
                              {
                                "name": "disabled_on",
                                "property": {
                                  "label": "Disabled",
                                  "type": "boolean",
                                  "value": "disabled"
                                },
                                "state": "true",
                                "type": "property"
                              },
                              {
                                "name": "set_value",
                                "type": "value",
                                "value": "const {paymentsBasis} = data || {};\r\nconst {contractor} = paymentsBasis || null;\r\nif (contractor == null){\r\n  value = \"\";\r\n} else if (paymentsBasis && contractor !== null) {\r\n    value = contractor;\r\n} "
                              }
                            ]
                          }
                        ],
                        "type": "selectJournal",
                        "input": true,
                        "isSelectedValueAsLink": false
                      }
                    ],
                    "key": "column",
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  },
                  {
                    "type": "column",
                    "md": 4,
                    "index": 1,
                    "input": false,
                    "components": [
                      {
                        "data": {
                          "url": "/citeck/ecos/records/query"
                        },
                        "defaultValue": "",
                        "type": "ecosSelect",
                        "clearOnHide": false,
                        "input": true,
                        "customDefaultValue": "value = 'resident';",
                        "key": "payments_beneficiaryType",
                        "label": "payments:beneficiaryType",
                        "properties": {
                          "attribute": "payments:beneficiaryType"
                        },
                        "refreshOn": ""
                      }
                    ],
                    "key": "column",
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  }
                ],
                "key": "columns29",
                "type": "columns",
                "input": false
              }
            ],
            "title": "Main",
            "key": "panel2"
          },
          {
            "type": "panel",
            "input": false,
            "components": [
              {
                "type": "columns",
                "input": false,
                "columns": [
                  {
                    "type": "column",
                    "md": 4,
                    "index": 0,
                    "input": false,
                    "components": [
                      {
                        "defaultValue": "",
                        "type": "datetime",
                        "suffix": true,
                        "format": "dd-MM-yyyy",
                        "enableTime": false,
                        "datePicker": {
                          "minDate": "",
                          "maxDate": ""
                        },
                        "clearOnHide": false,
                        "input": true,
                        "timePicker": {
                          "showMeridian": false
                        },
                        "customDefaultValue": "value = moment();",
                        "key": "payments_billDate",
                        "allowCalculateOverride": true,
                        "label": "payments:billDate",
                        "properties": {
                          "attribute": "payments:billDate"
                        }
                      }
                    ],
                    "key": "column",
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  },
                  {
                    "type": "column",
                    "md": 4,
                    "index": 1,
                    "input": false,
                    "components": [
                      {
                        "label": "payments:plannedPaymentDate",
                        "format": "dd-MM-yyyy",
                        "clearOnHide": false,
                        "datePicker": {
                          "minDate": "",
                          "maxDate": ""
                        },
                        "defaultValue": "",
                        "refreshOn": "payments_billDate",
                        "calculateValue": "const {payments_billDate = \"\"} = data;\r\nvar nextDay = moment (payments_billDate);\r\nvar amtDay = 5;\r\nwhile (amtDay > 0) {\r\n    nextDay.set({\r\n        'day': nextDay.get('day') + 1          \r\n    });\r\n    if (nextDay.get('day') === 0 || nextDay.get('day') === 6) {\r\n        //do nothing\r\n    } else {\r\n        amtDay--;\r\n    }\r\n}\r\nvalue = nextDay;",
                        "allowCalculateOverride": true,
                        "key": "payments_plannedPaymentDate",
                        "properties": {
                          "attribute": "payments:plannedPaymentDate"
                        },
                        "type": "datetime",
                        "suffix": true,
                        "input": true
                      }
                    ],
                    "key": "column",
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  },
                  {
                    "components": [
                      {
                        "label": "payments:period",
                        "clearOnHide": false,
                        "dataSrc": "custom",
                        "data": {
                          "custom": "const {period = {}} = data;\nconst {records = []} = period;\n\nfor (var i in records) {\n    values.push({label: records[i].name,value: records[i].id})\n}"
                        },
                        "defaultValue": "",
                        "refreshOn": [
                          "period"
                        ],
                        "calculateValue": "const {payments_period = \"\"} = data;\n\nvalue = payments_period",
                        "allowCalculateOverride": true,
                        "key": "payments_period",
                        "properties": {
                          "attribute": "payments:period"
                        },
                        "type": "ecosSelect",
                        "input": true
                      }
                    ],
                    "type": "column",
                    "md": 4,
                    "key": "column",
                    "index": 2,
                    "input": false,
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  }
                ],
                "key": "columns25"
              }
            ],
            "title": "Date",
            "payments_period": "",
            "payments_plannedPaymentDate": "2019-07-31T15:08:45+03:00",
            "key": "panel5",
            "payments_billDate": "2019-07-24T15:08:45+03:00"
          },
          {
            "type": "panel",
            "input": false,
            "components": [
              {
                "label": {
                  "ru": "Columns"
                },
                "columns": [
                  {
                    "type": "column",
                    "md": 4,
                    "index": 0,
                    "input": false,
                    "components": [
                      {
                        "label": {
                          "ru": "payments:currency"
                        },
                        "clearOnHide": false,
                        "dataSrc": "custom",
                        "data": {
                          "custom": "const {currencyList = {}} = data;\nconst {records = []} = currencyList;\n\nfor (var i in records) {\n    values.push({label: records[i].label ,value: records[i].id})\n}\n"
                        },
                        "refreshOnEvent": true,
                        "refreshEventName": "currencyListEvent",
                        "defaultValue": "alfresco/@workspace://SpacesStore/currency-rur",
                        "refreshOn": [
                          "paymentsBasis",
                          "currencyList"
                        ],
                        "calculateValue": "const{paymentsBasis = {}} = data || null;\r\nconst{agreementCurrency = \"\"} = paymentsBasis || null;\r\nconst{currency = \"\"} = paymentsBasis || null;\r\nif (!_.isEmpty(agreementCurrency)) {\r\n    value = agreementCurrency;\r\n} else if (!_.isEmpty(paymentsBasis) && !_.isEmpty(currency) ) {\r\n    value = currency;\r\n} else {\r\n\tvalue = 'alfresco/@workspace://SpacesStore/currency-rur';\r\n}",
                        "allowCalculateOverride": true,
                        "validate": {
                          "required": true
                        },
                        "key": "payments_currency",
                        "properties": {
                          "attribute": "payments:currency"
                        },
                        "logic": [
                          {
                            "name": "disabled_on",
                            "trigger": {
                              "type": "javascript",
                              "javascript": "const{paymentsBasis = \"\"} = data || {};\r\nconst{agreementCurrency = \"\"} = paymentsBasis || null;\r\nconst{currency = \"\"} = paymentsBasis || null;\r\nif (paymentsBasis && agreementCurrency !== null) {\r\n    result = true;\r\n} else if (paymentsBasis && currency !== null) {\r\n    result = true;\r\n} else {\r\n    result = false;\r\n}\r\n"
                            },
                            "actions": [
                              {
                                "name": "disabled_on",
                                "property": {
                                  "label": "Disabled",
                                  "type": "boolean",
                                  "value": "disabled"
                                },
                                "state": "true",
                                "type": "property"
                              }
                            ]
                          }
                        ],
                        "type": "ecosSelect",
                        "input": true
                      },
                      {
                        "type": "checkbox",
                        "clearOnHide": false,
                        "input": true,
                        "key": "payments_overexpenditure",
                        "label": "payments:overexpenditure",
                        "properties": {
                          "attribute": "payments:overexpenditure"
                        }
                      }
                    ],
                    "key": "column",
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  },
                  {
                    "type": "column",
                    "md": 4,
                    "index": 1,
                    "input": false,
                    "components": [
                      {
                        "label": "payments:paymentAmount",
                        "clearOnHide": false,
                        "isBigNumber": false,
                        "delimiterValue": "",
                        "defaultValue": 0,
                        "calculateValue": "const {options = {}} = instance;\r\nconst {formMode = \"\"} = options;\r\nconst {containsProductsAndServices = []} = data;\r\n\r\nvalue = 0;\r\n\r\n\r\nif (formMode === 'CREATE' && containsProductsAndServices.length > 0) {\r\n    for (var i in containsProductsAndServices) {\r\n      let {total = 0} = containsProductsAndServices[i];\r\n        value += parseFloat (total);\r\n    }\r\n}",
                        "allowCalculateOverride": true,
                        "validate": {
                          "required": true,
                          "min": 0
                        },
                        "key": "payments_paymentAmount",
                        "properties": {
                          "attribute": "payments:paymentAmount"
                        },
                        "logic": [
                          {
                            "name": "required_off",
                            "trigger": {
                              "type": "javascript",
                              "javascript": "const {dms_updateContent = false} = data;\n\nresult = dms_updateContent ? true : false;"
                            },
                            "actions": [
                              {
                                "name": "required_off",
                                "property": {
                                  "label": "Required",
                                  "type": "boolean",
                                  "value": "validate.required"
                                },
                                "state": "false",
                                "type": "property"
                              }
                            ]
                          },
                          {
                            "name": "protected_on",
                            "trigger": {
                              "type": "javascript",
                              "javascript": "const {dms_updateContent = false,\n    pas_containsProductsAndServices = []\n} = data;\nconst {options = {}} = instance;\nconst {formMode = \"\"} = options;\nresult = dms_updateContent || (formMode !== 'CREATE' && pas_containsProductsAndServices.length > 0) ? true : false;"
                            },
                            "actions": [
                              {
                                "name": "protected_on",
                                "property": {
                                  "label": "Disabled",
                                  "type": "boolean",
                                  "value": "disabled"
                                },
                                "state": "true",
                                "type": "property"
                              }
                            ]
                          }
                        ],
                        "decimalLimit": 2,
                        "type": "number",
                        "input": true,
                        "stringValue": 0
                      }
                    ],
                    "key": "column",
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  },
                  {
                    "components": [
                      {
                        "defaultValue": 0,
                        "type": "number",
                        "key": "payments_paymentVAT",
                        "validate": {
                          "min": 0,
                          "required": true
                        },
                        "clearOnHide": false,
                        "label": "payments:paymentVAT",
                        "input": true,
                        "properties": {
                          "attribute": "payments:paymentVAT"
                        },
                        "stringValue": 0
                      }
                    ],
                    "type": "column",
                    "md": 4,
                    "key": "column",
                    "index": 2,
                    "input": false,
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  }
                ],
                "key": "columns31",
                "type": "columns",
                "input": false
              }
            ],
            "title": "Finance",
            "payments_paymentVAT": 0,
            "key": "panel6",
            "payments_currency": "alfresco/@workspace://SpacesStore/currency-rur"
          },
          {
            "type": "panel",
            "input": false,
            "components": [
              {
                "label": {
                  "ru": "Columns"
                },
                "columns": [
                  {
                    "type": "column",
                    "index": 0,
                    "input": false,
                    "components": [
                      {
                        "type": "checkbox",
                        "customConditional": "show = instance.options.formMode == 'CREATE' ? true : false;",
                        "clearOnHide": false,
                        "input": true,
                        "key": "dms_updateContent",
                        "label": "dms:updateContent",
                        "customClass": "mb-md-0",
                        "properties": {
                          "attribute": "dms:updateContent"
                        }
                      }
                    ],
                    "classes": "d-flex align-items-md-center",
                    "key": "column",
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  }
                ],
                "key": "columns28",
                "type": "columns",
                "input": false
              },
              {
                "label": {
                  "ru": "Columns"
                },
                "columns": [
                  {
                    "type": "column",
                    "md": 12,
                    "index": 0,
                    "input": false,
                    "components": [
                      {
                        "label": "cm:content",
                        "clearOnHide": false,
                        "onFileClick": "download",
                        "storage": "url",
                        "url": "/share/proxy/alfresco/eform/file",
                        "options": "",
                        "validate": {
                          "required": true
                        },
                        "key": "cm_content",
                        "properties": {
                          "attribute": "cm:content"
                        },
                        "customConditional": "show = ((instance.options.formMode === 'CREATE' && !data.dms_updateContent) || instance.options.formMode !== 'CREATE') ? true : false;",
                        "logic": [
                          {
                            "name": "required_off",
                            "trigger": {
                              "type": "javascript",
                              "javascript": "var res = ((instance.options.formMode === 'CREATE' && !data.dms_updateContent) || instance.options.formMode !== 'CREATE') ? true : false;\nresult = !res;"
                            },
                            "actions": [
                              {
                                "name": "required_off",
                                "property": {
                                  "label": "Required",
                                  "type": "boolean",
                                  "value": "validate.required"
                                },
                                "state": "false",
                                "type": "property"
                              }
                            ]
                          }
                        ],
                        "type": "file",
                        "defaultValue": [],
                        "input": true
                      },
                      {
                        "label": "pas:containsProductsAndServices",
                        "multiple": true,
                        "reorder": false,
                        "clearOnHide": false,
                        "eventName": "routeTableUpdate",
                        "source": {
                          "type": "custom",
                          "custom": {
                            "columns": [
                              {
                                "name": "cm:title",
                                "formatter": "",
                                "setAttributesManually": false
                              },
                              {
                                "name": "cm:description",
                                "formatter": "",
                                "setAttributesManually": false
                              },
                              {
                                "name": "pas:pricePerUnit",
                                "formatter": "",
                                "setAttributesManually": false
                              },
                              {
                                "name": "pas:quantity",
                                "formatter": "",
                                "setAttributesManually": false
                              },
                              {
                                "name": "pas:entityUnit",
                                "formatter": "",
                                "setAttributesManually": false
                              },
                              {
                                "name": "pas:total",
                                "formatter": "",
                                "setAttributesManually": false
                              },
                              {
                                "name": "pas:type",
                                "formatter": "",
                                "setAttributesManually": false
                              },
                              {
                                "name": "pas:currency",
                                "formatter": "",
                                "setAttributesManually": false
                              }
                            ],
                            "createVariants": [],
                            "record": null,
                            "attribute": null
                          }
                        },
                        "triggerEventOnChange": true,
                        "validate": {
                          "required": true
                        },
                        "key": "pas_containsProductsAndServices",
                        "properties": {
                          "attribute": "pas:containsProductsAndServices"
                        },
                        "customConditional": "const {pas_containsProductsAndServices = [],\n       dms_updateContent = false\n} = data;\nshow = (instance.options.formMode !== 'CREATE' && pas_containsProductsAndServices.length > 0) || dms_updateContent;",
                        "logic": [
                          {
                            "name": "required_off",
                            "trigger": {
                              "type": "javascript",
                              "javascript": "result = !data.dms_updateContent;"
                            },
                            "actions": [
                              {
                                "name": "required_off",
                                "property": {
                                  "label": "Required",
                                  "type": "boolean",
                                  "value": "validate.required"
                                },
                                "state": "false",
                                "type": "property"
                              }
                            ]
                          },
                          {
                            "name": "disableLogic",
                            "trigger": {
                              "type": "javascript",
                              "javascript": "result = instance.options.formMode != 'CREATE';"
                            },
                            "actions": [
                              {
                                "name": "disable",
                                "type": "property",
                                "property": {
                                  "label": "Disabled",
                                  "value": "disabled",
                                  "type": "boolean"
                                },
                                "state": "true"
                              }
                            ]
                          }
                        ],
                        "type": "tableForm",
                        "_journalId": "alf_term:teReqRoute",
                        "input": true
                      }
                    ],
                    "key": "column",
                    "conditional": {
                      "show": null,
                      "when": null
                    }
                  }
                ],
                "key": "columns30",
                "type": "columns",
                "input": false
              },
              {
                "defaultValue": "",
                "type": "textarea",
                "clearOnHide": false,
                "input": true,
                "customDefaultValue": "if (data.copiedFromData && data.copiedFromData.comment) {\n  value = data.copiedFromData.comment;\n}",
                "key": "payments_paymentComment",
                "label": "payments:paymentComment",
                "rows": 2,
                "properties": {
                  "attribute": "payments:paymentComment"
                }
              }
            ],
            "title": "Other",
            "key": "panel"
          }
        ]
      },
      {
        "label": {
          "ru": "Columns"
        },
        "columns": [
          {
            "components": [
              {
                "label": "period",
                "source": {
                  "type": "recordsQuery",
                  "recordsQuery": {
                    "attributes": {
                      "name": "cm:name"
                    },
                    "query": "var value = {\r\n  query: 'TYPE:\"payments:period\"',\r\n  language: 'fts-alfresco'\r\n}",
                    "isSingle": false
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "once"
                },
                "key": "period",
                "type": "asyncData",
                "clearOnHide": false,
                "input": true,
                "conditional": {
                  "show": null,
                  "when": null
                }
              },
              {
                "label": "currencyList",
                "source": {
                  "type": "recordsQuery",
                  "recordsQuery": {
                    "attributes": {
                      "label": "cm:title"
                    },
                    "query": "var value = {\r\n  query: 'TYPE:\"idocs:currency\"',\r\n  language: 'fts-alfresco'\r\n}",
                    "isSingle": false
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "once"
                },
                "ignoreValuesEqualityChecking": true,
                "key": "currencyList",
                "type": "asyncData",
                "clearOnHide": false,
                "input": true,
                "conditional": {
                  "show": null,
                  "when": null
                }
              },
              {
                "label": "legalEntities",
                "source": {
                  "type": "recordsQuery",
                  "recordsQuery": {
                    "attributes": {
                      "engName": "idocs:engOrganizationName",
                      "key": "cm:name"
                    },
                    "query": "var value = {\r\n  query: 'TYPE:\"idocs:legalEntity\"',\r\n  language: 'fts-alfresco'\r\n}",
                    "isSingle": false
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "once"
                },
                "triggerEventOnChange": true,
                "eventName": "legalEntitiesEvent",
                "key": "legalEntities",
                "type": "asyncData",
                "clearOnHide": false,
                "input": true,
                "conditional": {
                  "show": null,
                  "when": null
                }
              },
              {
                "label": "payment",
                "source": {
                  "type": "recordsQuery",
                  "recordsQuery": {
                    "attributes": {
                      "key": "cm:title"
                    },
                    "query": "var value = {\r\n  query: 'TYPE:\"payments:payment\"',\r\n  language: 'fts-alfresco'\r\n}",
                    "isSingle": false
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "once"
                },
                "key": "payment",
                "type": "asyncData",
                "clearOnHide": false,
                "input": true,
                "conditional": {
                  "show": null,
                  "when": null
                }
              }
            ],
            "md": 4,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 0
          },
          {
            "md": 4,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 1,
            "components": [
              {
                "label": "containsProductsAndServices",
                "source": {
                  "type": "recordsArray",
                  "recordsArray": {
                    "attributes": {
                      "total": "pas:total",
                      "entityUnit": "pas:entityUnit"
                    },
                    "id": "{{data.pas_containsProductsAndServices}}"
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "event",
                  "event": "routeTableUpdate",
                  "force": true
                },
                "refreshOn": [
                  {
                    "label": "pas_containsProductsAndServices",
                    "value": "pas_containsProductsAndServices"
                  }
                ],
                "key": "containsProductsAndServices",
                "type": "asyncData",
                "clearOnHide": false,
                "input": true,
                "conditional": {
                  "show": null,
                  "when": null
                }
              },
              {
                "label": "paymentsBasis",
                "source": {
                  "type": "record",
                  "record": {
                    "id": "{{data.payments_basis}}",
                    "attributes": {
                      "contractor": "contracts:contractor?id",
                      "agreementCurrency": "contracts:agreementCurrency?id",
                      "contractWith": "contracts:contractWith",
                      "currency": "payments:currency?id",
                      "type": "type",
                      "agreementLegalEntity": "contracts:agreementLegalEntity?id",
                      "legalEntity": "idocs:legalEntity"
                    }
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "once",
                  "event": "routeTableUpdate"
                },
                "refreshOn": [
                  {
                    "label": "payments_basis",
                    "value": "payments_basis"
                  }
                ],
                "key": "paymentsBasis",
                "type": "asyncData",
                "clearOnHide": false,
                "input": true,
                "conditional": {
                  "show": null,
                  "when": null
                }
              },
              {
                "label": "payer",
                "source": {
                  "type": "record",
                  "record": {
                    "id": "{{data.payments_payer}}",
                    "attributes": {
                      "fullOrganizationName": "idocs:fullOrganizationName"
                    }
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "once",
                  "event": "routeTableUpdate"
                },
                "refreshOn": [
                  {
                    "label": "payments_payer",
                    "value": "payments_payer"
                  }
                ],
                "key": "payer",
                "type": "asyncData",
                "clearOnHide": false,
                "input": true,
                "conditional": {
                  "show": null,
                  "when": null
                }
              }
            ]
          },
          {
            "md": 4,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 2,
            "components": [
              {
                "label": "invariants:isDraft",
                "labelPosition": "left-left",
                "clearOnHide": false,
                "hidden": true,
                "key": "invariants_isDraft",
                "properties": {
                  "attribute": "invariants:isDraft"
                },
                "type": "checkbox",
                "input": true
              }
            ]
          }
        ],
        "hidden": true,
        "key": "columns4",
        "type": "columns",
        "input": false
      },
      {
        "type": "columns",
        "input": false,
        "columns": [
          {
            "type": "column",
            "md": 3,
            "index": 0,
            "input": false,
            "components": [
              {
                "type": "button",
                "action": "event",
                "block": true,
                "state": "",
                "showValidations": false,
                "clearOnHide": false,
                "input": true,
                "removeIndents": true,
                "event": "cancel",
                "key": "submit4",
                "label": "Cancel"
              }
            ],
            "key": "column50",
            "conditional": {
              "show": null,
              "when": null
            }
          },
          {
            "type": "column",
            "md": 3,
            "index": 1,
            "input": false,
            "components": [],
            "key": "column51",
            "conditional": {
              "show": null,
              "when": null
            }
          },
          {
            "components": [
              {
                "label": "Save",
                "removeIndents": true,
                "state": "draft",
                "block": true,
                "disableOnInvalid": true,
                "clearOnHide": false,
                "key": "submit4",
                "customConditional": "const {options = {}} = instance;\nconst {formMode = \"\"} = options;\n\nconst {invariants_isDraft: isDraft} = data || {};\nshow = formMode == \"CREATE\" || !!isDraft;",
                "type": "button",
                "input": true
              }
            ],
            "type": "column",
            "md": 3,
            "key": "column52",
            "index": 2,
            "input": false,
            "conditional": {
              "show": null,
              "when": null
            }
          },
          {
            "components": [
              {
                "label": "Create",
                "removeIndents": true,
                "state": "",
                "theme": "primary",
                "block": true,
                "clearOnHide": false,
                "key": "submit",
                "logic": [
                  {
                    "name": "inProcess",
                    "trigger": {
                      "type": "javascript",
                      "javascript": "const {options = {}} = instance;\nconst {formMode = \"\"} = options;\n\nconst {invariants_isDraft: isDraft} = data || {};\n\nresult = formMode != \"CREATE\" && !isDraft;"
                    },
                    "actions": [
                      {
                        "name": "setLabel",
                        "property": {
                          "label": "Label",
                          "type": "string",
                          "value": "label"
                        },
                        "text": "Save",
                        "type": "property"
                      }
                    ]
                  }
                ],
                "type": "button",
                "input": true
              }
            ],
            "type": "column",
            "md": 3,
            "key": "column53",
            "index": 3,
            "input": false,
            "conditional": {
              "show": null,
              "when": null
            }
          }
        ],
        "key": "columns22"
      }
    ],
    "display": "form"
  },
  "attributes": {}
}
