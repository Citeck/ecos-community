<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <bean id="idocs.spring.ConcreteBeanPostProcessor" class="ru.citeck.ecos.spring.ConcreteBeanPostProcessor">
        <property name="configLocations">
            <list>
                <value>classpath*:alfresco/module/*/bean-processors.list</value>
                <value>classpath*:alfresco/extension/bean-processors.list</value>
            </list>
        </property>
    </bean>
    
	<util:map id="EcoS.PropertyEditors">
		<entry key="org.alfresco.service.namespace.QName">
			<bean id="QNamePropertyEditor" class="ru.citeck.ecos.spring.QNamePropertyEditor">
				<property name="namespaceService" ref="NamespaceService" />
			</bean>
		</entry>
		<entry key="org.alfresco.service.cmr.admin.RepoUsage">
			<bean id="RepoUsagePropertyEditor" class="ru.citeck.ecos.spring.RepoUsagePropertyEditor" />
		</entry>
		<entry key="org.alfresco.service.cmr.repository.NodeRef">
			<bean id="NodeRefPropertyEditor" class="ru.citeck.ecos.spring.NodeRefPropertyEditor" />
		</entry>
		<entry key="java.util.Date">
			<bean id="DatePropertyEditor" class="ru.citeck.ecos.spring.DatePropertyEditor" />
		</entry>
		<entry key="ru.citeck.ecos.utils.LazyNodeRef">
			<bean id="LazyNodeRefPropertyEditor" class="ru.citeck.ecos.spring.LazyNodeRefPropertyEditor">
				<property name="nodeServiceName" value="nodeService" />
				<property name="searchServiceName" value="searchService" />
				<property name="namespaceServiceName" value="namespaceService" />
			</bean>
		</entry>
	</util:map>
	
	<bean id="idocs.spring.PropertyEditorConfig" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="propertyEditorRegistrars">
			<list>
				<bean class="ru.citeck.ecos.spring.MapPropertyEditorRegistrar">
					<property name="propertyEditors" ref="EcoS.PropertyEditors" />
				</bean>
			</list>
		</property>
	</bean>
	
	<bean id="resourceResolver" class="ru.citeck.ecos.utils.ResourceResolver"/>

    <bean id="relatedWorkflowService" class="ru.citeck.ecos.workflow.related.RelatedWorkflowService" parent="baseJavaScriptExtension">
        <property name="extensionName">
            <value>relatedWorkflowService</value>
        </property>
        <property name="workflowService" ref="WorkflowService" />
    </bean>

    <!-- protected: used by custom manage-permissions page -->
    <bean id="scriptPermissionService" class="ru.citeck.ecos.security.ScriptPermissionService" parent="baseJavaScriptExtension">
        <property name="extensionName">
            <value>permissionService</value>
        </property>
        <property name="services" ref="ServiceRegistry"/>
    </bean>

    <bean id="newCommentNotificationService" class="ru.citeck.ecos.notification.NewCommentNotificationService">
        <property name="authorityService" ref="AuthorityService"/>
        <property name="notificationService" ref="NotificationService"/>
        <property name="nodeService" ref="NodeService"/>
	<property name="nodeOwnerDAO" ref="NodeOwnerDAO"/>
    </bean>

    <bean id="scriptCommentService" class="ru.citeck.ecos.notification.ScriptCommentService" parent="baseJavaScriptExtension">
        <property name="extensionName">
            <value>scriptCommentService</value>
        </property>
        <property name="newCommentNotificationService" ref="newCommentNotificationService"/>
    </bean>

	<!-- script service registry -->
	<bean id="ServiceRegistryJS" class="ru.citeck.ecos.service.script.ServiceRegistryJS" parent="baseJavaScriptExtension">
		<property name="extensionName" value="services" />
		<property name="serviceRegistry" ref="ServiceRegistry" />
	</bean>

	<!--==============================================================-->
	<!--                   Document Processors                        -->
	<!--==============================================================-->

	<bean id="DataBundleProcessorHelper" class="ru.citeck.ecos.processor.ProcessorHelper">
		<property name="serviceRegistry" ref="ServiceRegistry" />
	</bean>
	
	<bean id="TemplateExpressionEvaluator" class="ru.citeck.ecos.processor.TemplateExpressionEvaluator">
		<property name="templateService" ref="TemplateService" />
		<property name="repositoryHelper" ref="repositoryHelper" />
		<property name="engine" value="freemarker" />
	</bean>
	
	<bean id="AbstractDataBundleProcessor" abstract="true" init-method="init">
		<property name="serviceRegistry" ref="ServiceRegistry" />
		<property name="helper" ref="DataBundleProcessorHelper" />
		<property name="evaluator" ref="TemplateExpressionEvaluator" />
	</bean>
	
	<bean parent="AbstractDataBundleProcessor" abstract="true" id="AbstractDataBundleLine"></bean>
	<bean parent="AbstractDataBundleProcessor" abstract="true" id="AbstractDataBundleMerge"></bean>
	<bean parent="AbstractDataBundleProcessor" abstract="true" id="AbstractDataBundleSplit"></bean>

	<bean parent="AbstractDataBundleProcessor" abstract="true" id="SequentialDataBundleProcessor" name="dbp.sequential" 
		class="ru.citeck.ecos.processor.SequentialDataBundleProcessor" />
	<bean parent="AbstractDataBundleProcessor" abstract="true" id="ParallelDataBundleProcessor" name="dbp.parallel" 
		class="ru.citeck.ecos.processor.ParallelDataBundleProcessor" />

	<!-- output contents of the document -->
	<bean id="OutputContentLine" name="dbp.content" class="ru.citeck.ecos.processor.OutputContent" parent="AbstractDataBundleLine">
	</bean>
	
	<!-- process template and output result -->
	<bean id="OutputTemplateLine" name="dbp.template" class="ru.citeck.ecos.processor.OutputTemplate" parent="AbstractDataBundleLine" abstract="true">
	</bean>

	<!-- html template: default values -->
	<bean id="OutputTemplateLine.html" name="dbp.template.html" parent="OutputTemplateLine" abstract="true">
		<property name="engine" value="freemarker" />
		<property name="encoding" value="UTF-8" />
		<property name="mimetype" value="text/html" />
	</bean>

	<!-- process template and output result -->
	<bean id="OutputTemplateLine.docx" name="dbp.template.docx" parent="OutputTemplateLine" abstract="true">
		<property name="engine" value="wordDocument" />
		<property name="encoding" value="ISO-8859-1" />
		<property name="mimetype" value="text/html" />
	</bean>

    <!-- json template: default values -->
    <bean id="OutputTemplateLine.json" name="dbp.template.json" parent="OutputTemplateLine" abstract="true">
        <property name="engine" value="freemarker"/>
        <property name="encoding" value="UTF-8"/>
        <property name="mimetype" value="application/json"/>
    </bean>

    <bean id="SelectTemplate" name="dbp.select-template" parent="AbstractDataBundleLine" class="ru.citeck.ecos.processor.SelectTemplate" abstract="true"/>

    <bean id="SelectChildNodes" name="dbp.select-child-nodes" parent="AbstractDataBundleLine" class="ru.citeck.ecos.processor.SelectChildNodes" abstract="true"/>
    <bean id="SelectAssocNodes" name="dbp.select-assoc-nodes" parent="AbstractDataBundleLine" class="ru.citeck.ecos.processor.SelectAssocNodes" abstract="true"/>

	<!-- transform contents into specified format (mimetype/encoding) -->
	<bean id="TransformContentLine" name="dbp.transform" class="ru.citeck.ecos.processor.TransformContent" parent="AbstractDataBundleLine" abstract="true">
	</bean>

	<!-- update model -->
	<bean id="UpdateModelLine" name="dbp.model" class="ru.citeck.ecos.processor.UpdateModel" parent="AbstractDataBundleLine" abstract="true">
	</bean>
	
	<!-- build workflow model -->
	<!-- user should specify workflowId expression - it is evaluated to workflow id -->
	<!-- user can specify workflowModelKey, tasksModelKey, pathsModelKey, propsModelKey - whatever is needed -->
	<bean id="BuildWorkflowModel" name="dbp.model.workflow" class="ru.citeck.ecos.processor.BuildWorkflowModel" parent="AbstractDataBundleLine" abstract="true">
	</bean>
	
	<!-- build default template model -->
	<bean id="BuildDefaultModel" name="dbp.model.default" class="ru.citeck.ecos.processor.BuildDefaultModel" parent="AbstractDataBundleLine">
		<property name="repositoryHelper" ref="repositoryHelper" />
	</bean>
	
	<!-- conditional processing -->
	<bean id="SwitchDataBundleLine" name="dbp.switch" class="ru.citeck.ecos.processor.SwitchDataBundleLine" parent="AbstractDataBundleLine" abstract="true">
	</bean>
	
	<!-- input stream parsers -->
	
	<!-- user can override 'modelKey' parameter -->
	<bean id="ParseJSONLine" name="dbp.parse.json" class="ru.citeck.ecos.processor.ParseJSON" parent="AbstractDataBundleLine">
		<property name="modelKey" value="json" />
	</bean>
	
	<!-- merge models -->
	<bean id="ModelMerge" name="dbp.merge.model" class="ru.citeck.ecos.processor.ModelMerge" parent="AbstractDataBundleMerge">
	</bean>
	
	<!-- splits -->
	<bean id="TargetAssociationSplit" name="dbp.split.target-assoc" class="ru.citeck.ecos.processor.AssociationSplit" parent="AbstractDataBundleSplit" abstract="true">
		<property name="source" value="false" />
	</bean>
	
	<bean id="SourceAssociationSplit" name="dbp.split.source-assoc" class="ru.citeck.ecos.processor.AssociationSplit" parent="AbstractDataBundleSplit" abstract="true">
		<property name="source" value="true" />
	</bean>
	
	<bean id="ChildAssociationSplit" name="dbp.split.child-assoc" class="ru.citeck.ecos.processor.ChildAssociationSplit" parent="AbstractDataBundleSplit" abstract="true">
		<property name="parent" value="false" />
	</bean>
	
	<bean id="ParentAssociationSplit" name="dbp.split.parent-assoc" class="ru.citeck.ecos.processor.ChildAssociationSplit" parent="AbstractDataBundleSplit" abstract="true">
		<property name="parent" value="true" />
	</bean>
	
	<bean id="SupplementaryFilesSplit" name="dbp.split.suppl-files" class="ru.citeck.ecos.processor.SupplementaryFilesSplit" 
		parent="AbstractDataBundleSplit" abstract="true">
		<property name="dao" ref="supplementaryFilesDAO" />
	</bean>
	
	<!-- transform contents into pdf -->
	<bean id="TransformContentLine.PDF" name="dbp.transform.pdf" parent="TransformContentLine">
		<property name="outputMimetype" value="application/pdf" />
		<property name="outputEncoding" value="UTF-8" />
	</bean>

	<!-- transform contents into doc -->
	<bean id="TransformContentLine.DOC" name="dbp.transform.doc" parent="TransformContentLine">
		<property name="outputMimetype" value="application/msword" />
		<property name="outputEncoding" value="ISO-8859-1" />
	</bean>

	<!-- transform contents into docx -->
	<bean id="TransformContentLine.DOCX" name="dbp.transform.docx" parent="TransformContentLine">
		<property name="outputMimetype" value="application/vnd.openxmlformats-officedocument.wordprocessingml.document" />
		<property name="outputEncoding" value="ISO-8859-1" />
	</bean>

	<!-- transform contents into html -->
	<bean id="TransformContentLine.HTML" name="dbp.transform.html" parent="TransformContentLine">
		<property name="outputMimetype" value="text/html" />
		<property name="outputEncoding" value="UTF-8" />
	</bean>

	<!-- transform contents into png -->
	<bean id="TransformContentLine.PNG" name="dbp.transform.png" parent="TransformContentLine">
		<property name="outputMimetype" value="image/png" />
		<property name="outputEncoding" value="UTF-8" />
	</bean>

	<!-- transform contents into jpg -->
	<bean id="TransformContentLine.JPG" name="dbp.transform.jpg" parent="TransformContentLine">
		<property name="outputMimetype" value="image/jpeg" />
		<property name="outputEncoding" value="UTF-8" />
	</bean>

	<!-- pdf processors -->

	<!-- merge multiple pdf files into one -->
	<bean id="PDFMerge" name="dbp.merge.pdf" class="ru.citeck.ecos.processor.pdf.PDFMerge" parent="AbstractDataBundleMerge">
		<property name="modelMerge" ref="ModelMerge" />
	</bean>

	<!-- put specified stamp on each page of pdf -->
	<!-- stamp is calculated via processor(s) -->
	<!-- descendants should specify stampProcessor or stampProcessors -->
	<bean id="PDFStamp" class="ru.citeck.ecos.processor.pdf.PDFStamp" parent="AbstractDataBundleLine" abstract="true">
		<property name="transformCalculator" ref="dbp.transform.none" />
		<property name="stampProcessor">
			<bean parent="dbp.sequential" />
		</property>
	</bean>

	<!-- shortcut to place stamp under the page -->
	<bean id="dbp.pdf.stamp.under" parent="PDFStamp">
		<property name="foreground" value="false" />
	</bean>

	<!-- shortcut to place stamp above the page -->
	<bean id="dbp.pdf.stamp.above" parent="PDFStamp">
		<property name="foreground" value="true" />
	</bean>
	
	<bean id="DocStamp" class="ru.citeck.ecos.processor.pdf.DocStamp" parent="AbstractDataBundleLine" abstract="true">
		<property name="transformCalculator" ref="dbp.transform.none" />
		<property name="stampProcessor">
			<bean parent="dbp.sequential" />
		</property>
	</bean>
	<!-- shortcut to place stamp above the page -->
	<bean id="dbp.doc.stamp.above" parent="DocStamp">
		<property name="foreground" value="true" />
	</bean>
	
	<!-- draft and final watermarks -->
	<bean id="dbp.pdf.watermark.draft" parent="dbp.pdf.stamp.above">
		<property name="transformCalculator" ref="dbp.transform.diagonal" />
		<property name="stampProcessors">
			<list>
				<bean parent="dbp.content">
					<property name="nodeRef" value="workspace://SpacesStore/idocs-watermark-draft" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="dbp.pdf.watermark.final" parent="dbp.pdf.stamp.above">
		<property name="transformCalculator" ref="dbp.transform.diagonal" />
		<property name="stampProcessors">
			<list>
				<bean parent="dbp.content">
					<property name="nodeRef" value="workspace://SpacesStore/idocs-watermark-final" />
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- this can be used to embed javascript to pdf page, or to generate empty pdf with javascript (may be useful for stamps) -->
	<!-- user should specify 'javascript' property -->
	<bean id="PDFJavascript" name="dbp.pdf.javascript" class="ru.citeck.ecos.processor.pdf.PDFJavascript" parent="AbstractDataBundleLine" abstract="true">
	</bean>
	
	<bean name="dbp.pdf.print.auto" parent="PDFJavascript">
		<property name="javascript" value="this.print({bUI: false, bSilent: true, bShrinkToFit: true});" />
	</bean>
	
	<bean name="dbp.pdf.printdialog" parent="PDFJavascript">
		<property name="javascript" value="this.print({bUI: true, bSilent: false, bShrinkToFit: true});" />
	</bean>

	<!-- generate barcode from the model -->
	<!-- barcode is taken from spring prototype: specify barcodeName -->
	<!-- barcode input is calculated via template processor: specify barcodeInputTemplate -->
	<bean id="PDFBarcode" name="dbp.pdf.barcode" parent="AbstractDataBundleLine" class="ru.citeck.ecos.processor.pdf.PDFBarcode" abstract="true">
	</bean>
	
	<bean id="NodePDFBarcode" name="dbp.pdf.barcode.webscript" parent="dbp.switch">
		<property name="expression" value="${args.barcodeType!'code-128'}" />
		<property name="cases">
			<map>
				<entry key="code-128">
					<bean parent="dbp.pdf.barcode">
						<property name="barcodeName" value="Barcode.code128" />
						<property name="barcodeInput" value="${companyhome.nodeByReference[args.nodeRef].properties[args.property]}" />
						<property name="scaleFactor" value="${args.scale!'1.0'}" />
						<property name="margins" value="${args.margins!'10,10,10,10'}" />
					</bean>
				</entry>
				<entry key="code-39">
					<bean parent="dbp.pdf.barcode">
						<property name="barcodeName" value="Barcode.code39" />
						<property name="barcodeInput" value="${companyhome.nodeByReference[args.nodeRef].properties[args.property]?c}" />
						<property name="scaleFactor" value="${args.scale!'1.0'}" />
						<property name="margins" value="${args.margins!'10,10,10,10'}" />
					</bean>
				</entry>
				<entry key="ean-13">
					<bean parent="dbp.pdf.barcode">
						<property name="barcodeName" value="Barcode.ean13" />
						<property name="barcodeInput" value="${companyhome.nodeByReference[args.nodeRef].properties[args.property]?c}" />
						<property name="scaleFactor" value="${args.scale!'1.0'}" />
						<property name="margins" value="${args.margins!'10,10,10,10'}" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- barcode code-128 prototype -->
	<!-- note that code is not set, that is why we need prototype -->
	<bean id="Barcode.code128" class="com.itextpdf.text.pdf.Barcode128" scope="prototype" />

	<!-- barcode code-39 prototype -->
	<!-- note that code is not set, that is why we need prototype -->
	<bean id="Barcode.code39" class="com.itextpdf.text.pdf.Barcode39" scope="prototype" />

	<!-- barcode ean-13 prototype -->
	<!-- note that code is not set, that is why we need prototype -->
	<bean id="Barcode.ean13" class="com.itextpdf.text.pdf.BarcodeEAN" scope="prototype" />

	<!-- affine transforms -->

	<!-- affine transform to place object diagonally on the page -->
	<bean id="DiagonalCalculator" name="dbp.transform.diagonal" class="ru.citeck.ecos.processor.transform.DiagonalCalculator" />
	
	<!-- simple transform calculator -->
	<bean id="SimpleTransformCalculator" name="dbp.transform.none" class="ru.citeck.ecos.processor.transform.SimpleTransformCalculator">
		<property name="transforms">
			<list></list>
		</property>
	</bean>

	<!-- simple transforms -->
	<bean id="SimpleTransform.Scale" name="dbp.transform.scale" class="ru.citeck.ecos.processor.transform.ScaleTransform" />
	<bean id="SimpleTransform.Shear" name="dbp.transform.shear" class="ru.citeck.ecos.processor.transform.ShearTransform" />
	<bean id="SimpleTransform.Rotate" name="dbp.transform.rotate" class="ru.citeck.ecos.processor.transform.RotateTransform" />
	<bean id="SimpleTransform.Translate" name="dbp.transform.translate" class="ru.citeck.ecos.processor.transform.TranslateTransform" />
	
	<!-- affine transform to place object in the upper left corner of the page -->
	<bean id="SimpleTransformCalculator.UpperLeft" name="dbp.transform.upper.left" parent="SimpleTransformCalculator">
		<property name="transforms">
			<list>
				<bean parent="dbp.transform.translate">
					<property name="x" value="0 0  0 0 0" />
					<property name="y" value="0 0 -1 0 1" />
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- affine transform to place object in the upper center of the page -->
	<bean id="SimpleTransformCalculator.UpperCenter" name="dbp.transform.upper.center" parent="SimpleTransformCalculator">
		<property name="transforms">
			<list>
				<bean parent="dbp.transform.translate">
					<property name="x" value="0 -0.5 0 0.5 0" />
					<property name="y" value="-10 0 -1 0 1" />
				</bean>
			</list>
		</property>
	</bean>
    
	<!-- affine transform to place object in the upper right corner of the page -->
	<bean id="SimpleTransformCalculator.UpperRight" name="dbp.transform.upper.right" parent="SimpleTransformCalculator">
		<property name="transforms">
			<list>
				<bean parent="dbp.transform.translate">
					<property name="x" value="0 -1  0 1 0" />
					<property name="y" value="0  0 -1 0 1" />
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- affine transform to place object in the center of the page -->
	<bean id="SimpleTransformCalculator.Center" name="dbp.transform.center" parent="SimpleTransformCalculator">
		<property name="transforms">
			<list>
				<bean parent="dbp.transform.translate">
					<property name="x" value="0 -0.5 0 0.5 0" />
					<property name="y" value="0 0 -0.5 0 0.5" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- affine transform to place object in the lower left corner of the page -->
	<bean id="SimpleTransformCalculator.LowerLeft" name="dbp.transform.lower.left" parent="SimpleTransformCalculator">
		<property name="transforms">
			<list>
				<bean parent="dbp.transform.translate">
					<property name="x" value="0 0  0 0 0" />
					<property name="y" value="0  0 0 0 0" />
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- affine transform to place object in the lower center of the page -->
	<bean id="SimpleTransformCalculator.LowerCenter" name="dbp.transform.lower.center" parent="SimpleTransformCalculator">
		<property name="transforms">
			<list>
				<bean parent="dbp.transform.translate">
					<property name="x" value="0 -0.5 0 0.5 0" />
					<property name="y" value="10 0 0 0 0" />
				</bean>
			</list>
		</property>
	</bean>
    
	<!-- affine transform to place object in the lower right corner of the page -->
	<bean id="SimpleTransformCalculator.LowerRight" name="dbp.transform.lower.right" parent="SimpleTransformCalculator">
		<property name="transforms">
			<list>
				<bean parent="dbp.transform.translate">
					<property name="x" value="0 -1 0 1 0" />
					<property name="y" value="0  0 0 0 0" />
				</bean>
			</list>
		</property>
	</bean>
	
    <bean id="ConstructSearchQuery" class="ru.citeck.ecos.processor.ConstructSearchQuery"
            name="dbp.query.construct" parent="AbstractDataBundleLine" abstract="true">
        <property name="parser" ref="criteriaParser"/>
    </bean>

    <bean id="ExecuteSearchQuery" class="ru.citeck.ecos.processor.ExecuteSearchQuery"
            name="dbp.query.execute" parent="AbstractDataBundleLine" abstract="true">
        <property name="searchService" ref="criteriaSearchService"/>
    </bean>
    
    <!-- Reports Proocessors -->
    
    <bean id="FormToJSONParametersFilter" class="ru.citeck.ecos.processor.FormToJSONParametersFilter"
            name="dbp.filter.formtojson" parent="AbstractDataBundleLine" abstract="true">
    </bean>
    
    <bean id="ReportParametersFilter" class="ru.citeck.ecos.processor.report.ReportParametersFilter"
            name="dbp.report.filter" parent="AbstractDataBundleLine" abstract="true">
    </bean>
    
    <bean id="ReportProducer" class="ru.citeck.ecos.processor.report.ReportProducer"
            name="dbp.report.producer" parent="AbstractDataBundleLine" abstract="true">
        <property name="serviceRegistry" ref="ServiceRegistry" />
        <property name="templateNodeService" ref="TemplateNodeService" /> 
    </bean>
    
    <bean id="ReportOutputHTML" name="dbp.report.template.html" parent="OutputTemplateLine.html" abstract="true" />
    
    <bean id="ReportOutputExcel" class="ru.citeck.ecos.processor.report.ReportOutputExcel"
            name="dbp.report.template.xlsx" parent="AbstractDataBundleLine" abstract="true" />

	<!-- big number encoder exposed to JavaScript - encodes big numbers for indexing -->
    <bean id="bigNumberEncoder" class="ru.citeck.ecos.utils.BigNumberEncoderJS" parent="baseJavaScriptExtension">
        <property name="extensionName">
            <value>bigNumberEncoder</value>
        </property>
    </bean>

	<!-- overdue notification sender -->
	<bean id="OverdueNotificationSender"
		class="ru.citeck.ecos.notification.TaskNotificationSender">
		<property name="serviceRegistry" ref="ServiceRegistry" />
		<property name="templateRoot" value="/app:company_home/app:dictionary/app:email_templates/cm:workflownotification" />
		<property name="defaultTemplate" value="cm:default-expired-notification.html.ftl" />
		<property name="nodeOwnerDAO" ref="NodeOwnerDAO"/>
		<property name="notificationType" value="overdue_task"/>
	</bean>
	
	<!-- overdue notification sender -->
	<bean id="OverdueWorkflowNotificationSender"
		class="ru.citeck.ecos.notification.TaskNotificationSender">
		<property name="serviceRegistry" ref="ServiceRegistry" />
		<property name="templateRoot" value="/app:company_home/app:dictionary/app:email_templates/cm:workflownotification" />
		<property name="nodeOwnerDAO" ref="NodeOwnerDAO"/>
		<property name="notificationType" value="overdue_workflow"/>
	</bean>
	
	<!-- Custom type form processor -->
    <bean id="typeFormProcessor"
		class="ru.citeck.ecos.form.TypeFormProcessor"
		parent="baseFormProcessor">
		<property name="matchPattern" value="type" />
		<property name="filterRegistry" ref="typeFilterRegistry" />
		<property name="builderRegistry" ref="FormNodeBuilderRegistry" />
	</bean>
	
	<bean id="FormNodeBuilderRegistry"
		class="ru.citeck.ecos.form.FormNodeBuilderRegistry">
		<property name="dictionaryService" ref="DictionaryService" />
		<property name="namespaceService" ref="NamespaceService" />
	</bean>
	
	<bean id="AbstractFormNodeBuilder"
		class="ru.citeck.ecos.form.AbstractFormNodeBuilder"
		abstract="true" init-method="init">
		<property name="registry" ref="FormNodeBuilderRegistry" />
	</bean>
	
	<bean id="DefaultFormNodeBuilder" 
		class="ru.citeck.ecos.form.DefaultFormNodeBuilder"
		parent="AbstractFormNodeBuilder">
		<property name="typeName" value="cm:cmobject" />
		<property name="nodeService" ref="NodeService" />
		<property name="namespaceService" ref="NamespaceService" />
		<property name="dictionaryService" ref="DictionaryService"/>
		<property name="searchService" ref="searchService"/>
	</bean>

	<bean id="AuthorityFormNodeBuilder" 
		class="ru.citeck.ecos.form.AuthorityFormNodeBuilder"
		parent="AbstractFormNodeBuilder">
		<property name="typeName" value="cm:authorityContainer" />
		<property name="authorityService" ref="AuthorityService" />
	</bean>
	
	<bean id="PersonFormNodeBuilder" 
		class="ru.citeck.ecos.form.PersonFormNodeBuilder"
		parent="AbstractFormNodeBuilder">
		<property name="typeName" value="cm:person" />
		<property name="authorityService" ref="AuthorityService" />
		<property name="personService" ref="PersonService" />
	</bean>

	<!-- Form Filters -->
	<bean id="FileUploadSupportCreateFilter" class="ru.citeck.ecos.form.FileUploadFormFilterImpl" parent="baseFormFilter">
		<property name="filterRegistry" ref="typeFilterRegistry" />
		<property name="nodeService" ref="nodeService" />
		<property name="contentService" ref="contentService" />
		<property name="mimetypeService" ref="mimetypeService" />
		<property name="versionService" ref="versionService" />
		<property name="checkOutCheckInService" ref="checkOutCheckInService" />
	</bean>

	<bean id="FileUploadSupportEditFilter" class="ru.citeck.ecos.form.FileUploadFormFilterImpl" parent="baseFormFilter">
		<property name="filterRegistry" ref="nodeFilterRegistry" />
		<property name="nodeService" ref="nodeService" />
		<property name="contentService" ref="contentService" />
		<property name="mimetypeService" ref="mimetypeService" />
		<property name="versionService" ref="versionService" />
		<property name="checkOutCheckInService" ref="checkOutCheckInService" />
	</bean>

	<!-- bean id="FileUploadSizeLimits" class="ru.citeck.ecos.form.FileUploadSizeRegistrar"
			init-method="init" >
		<property name="filters">
			<list>
				<ref bean= "FileUploadSupportCreateFilter"/>
				<ref bean= "FileUploadSupportEditFilter"/>
			</list>
		</property>
		<property name="sizeLimits">
			<map>
				<entry key="..." value="..." />
			</map>
		</property>
	</bean -->

	<!-- Supplimentary Files Form Filters -->
	<bean id="ChildAssociationsFilesCreateFilter" class="ru.citeck.ecos.form.ChildAssociationsFormFilterImpl" parent="baseFormFilter" >
		<property name="filterRegistry" ref="typeFilterRegistry" />
		<property name="nodeService" ref="nodeService" />
		<property name="dictionaryService" ref="DictionaryService"/>
		<property name="removeSecondaryAssocs" value="true"/>
	</bean>

	<bean id="ChildAssociationsFilesEditFilter" class="ru.citeck.ecos.form.ChildAssociationsFormFilterImpl" parent="baseFormFilter" >
		<property name="filterRegistry" ref="nodeFilterRegistry" />
		<property name="nodeService" ref="nodeService" />
		<property name="dictionaryService" ref="DictionaryService"/>
		<property name="removeSecondaryAssocs" value="true"/>
	</bean>
    
    <bean id="ChildAssocsFormRegistrar" class="ru.citeck.ecos.form.ChildAssociationsRegistrar" init-method="init" abstract="true">
		<property name="childAssociationsFormFilters" >
			<list>
				<ref bean="ChildAssociationsFilesCreateFilter" />
				<ref bean="ChildAssociationsFilesEditFilter" />
			</list>
		</property>
        <!-- fill this with necessary qnames
		<property name="associations">
			<list>
				<value>...</value>
			</list>
		</property>
        -->
	</bean>



	<bean id="SupplimentaryFilesRegistrar" class="ru.citeck.ecos.form.ChildAssociationsRegistrar" 
			depends-on="idocs.dictionaryBootstrap" init-method="init">
		<property name="childAssociationsFormFilters" >
			<list>
				<ref bean="ChildAssociationsFilesCreateFilter" />
				<ref bean="ChildAssociationsFilesEditFilter" />
			</list>
		</property>
		<property name="associations">
			<list>
				<value>dms:supplementaryFiles</value>
			</list>
		</property>
	</bean>

    <bean id="confirmConfigService" class="ru.citeck.ecos.confirm.ConfirmConfigService">
        <property name="recordSeparator" value=","/>
        <property name="partSeparator" value="|"/>
        <property name="keyPart" value="user"/>
        <property name="parts">
            <list>
                <value>user</value>
                <value>versionRef</value>
                <value>versionLabel</value>
                <value>decision</value>
            </list>
        </property>
        <property name="allowedDecisions">
            <list>
                <value>confirm</value>
                <value>decline</value>
            </list>
        </property>
    </bean>

	<!-- Constant Makers -->
	
	<bean id="ConstantMaker.allow" class="ru.citeck.ecos.security.ConstantMakerAllowImpl">
		<property name="nodeService" ref="NodeService" />
		<property name="permissionService" ref="PermissionService" />
		<property name="nodeOwnerDAO" ref="NodeOwnerDAO" />
	</bean>

	<bean id="ConstantMaker.deny" class="ru.citeck.ecos.security.ConstantMakerDenyImpl">
		<property name="nodeService" ref="NodeService" />
		<property name="permissionService" ref="PermissionService" />
		<property name="nodeOwnerDAO" ref="NodeOwnerDAO" />
	</bean>
	
	<alias name="ConstantMaker.${constant-maker.impl}" alias="ConstantMaker" />
	
	<bean id="ConstantMakerJS" class="ru.citeck.ecos.security.ConstantMakerJS" parent="baseJavaScriptExtension">
		<property name="extensionName" value="constantMaker" />
		<property name="implementations">
			<map>
				<entry key="allow" value-ref="ConstantMaker.allow" />
				<entry key="deny"  value-ref="ConstantMaker.deny" />
			</map>
		</property>	
		<property name="implId" value="${constant-maker.impl}" />
	</bean>

	<!-- custom dictionary models processing -->
	<bean id="alfrescoDictionaryDAO" class="org.alfresco.repo.dictionary.DictionaryDAOImpl">
		<constructor-arg index="0">
			<ref bean="namespaceDAO" />
		</constructor-arg>
		<property name="tenantService">
			<ref bean="tenantService"/>
		</property>
		<property name="dictionaryRegistryCache">
			<ref bean="compiledModelsCache"/>
		</property>
		<property name="defaultAnalyserResourceBundleName">
			<value>alfresco/module/idocs-repo/model/dataTypeAnalyzers</value>
		</property>
	</bean>
	
	<bean id="dictionaryDAO" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="alfrescoDictionaryDAO" />
		<property name="interceptorNames">
			<list>
				<value>AddBigNumberIndexProperties</value>
				<value>AddAssociationIndexProperties</value>
				<value>AddDefaultPropertiesTokenisation</value>
			</list>
		</property>
	</bean>
	
	<!-- interceptor, that automatically adds index properties for each big number property -->
	<bean name="AddBigNumberIndexProperties" class="ru.citeck.ecos.dictionary.AddBigNumberIndexProperties" />

	<!-- interceptor, that automatically adds index properties for each association -->
	<bean name="AddAssociationIndexProperties" class="ru.citeck.ecos.dictionary.AddAssociationIndexProperties" init-method="init">
		<property name="registry" ref="AssociationIndexPropertyRegistry" />
		<property name="acceptedAuthors">
			<set>
				<value>citeck</value>
				<value>Citeck</value>
			</set>
		</property>
		<property name="acceptedAssocs">
			<set>
				<value>bpm:package</value>
				<value>bpm:pooledActors</value>
			</set>
		</property>
	</bean>
	
	<!-- interceptor, that automatically adds indexing to properties, that do not have indexing -->
	<bean name="AddDefaultPropertiesTokenisation" class="ru.citeck.ecos.dictionary.AddDefaultPropertiesTokenisation">
		<property name="defaultMode" value="BOTH" />
		<property name="modes">
			<map value-type="org.alfresco.repo.dictionary.IndexTokenisationMode">
				<entry key="d:noderef" value="FALSE" />
				<entry key="d:category" value="FALSE" />
			</map>
		</property>
	</bean>

	<bean id="ScriptDictionaryService" class="ru.citeck.ecos.dictionary.DictionaryServiceJSImpl" parent="baseJavaScriptExtension">
		<property name="extensionName" value="dictionary" />
		<property name="serviceRegistry" ref="ServiceRegistry" />
	</bean>

	<!-- Counter Services -->
	<bean name="CounterService" class="ru.citeck.ecos.counter.CounterServiceImpl">
		<property name="nodeService" ref="NodeService" />
		<property name="counterRoot" value="workspace://SpacesStore/counter-root" />
	</bean>
	
	<bean name="nodeInfoFactory" class="ru.citeck.ecos.node.NodeInfoFactoryImpl" init-method="init">
		<property name="serviceRegistry" ref="ServiceRegistry" />
		<property name="nodeService" ref="nodeService" />
		<property name="contentService" ref="contentService" />
		<property name="nodeAttributeService" ref="nodeAttributeService" />
	</bean>
	
	<bean name="NodeInfoFactory" class="ru.citeck.ecos.node.NodeInfoFactoryImpl" init-method="init">
		<property name="serviceRegistry" ref="ServiceRegistry" />
	</bean>
	
	<bean name="EnumerationService" class="ru.citeck.ecos.counter.EnumerationServiceImpl">
		<property name="serviceRegistry" ref="ServiceRegistry" />
	</bean>
	
	<bean name="EnumerationServiceJS" class="ru.citeck.ecos.counter.EnumerationServiceJS" parent="baseJavaScriptExtension">
		<property name="extensionName" value="enumeration" />
		<property name="serviceRegistry" ref="ServiceRegistry" />
		<property name="enumerationService" ref="EnumerationService" />
	</bean>
	
	<bean name="abstractNumberFormProcessor" 
		class="ru.citeck.ecos.form.AbstractNumberFormProcessor" 
		abstract="true" init-method="register">
		<property name="processorRegistry" ref="formProcessorRegistry" />
		<property name="fieldProcessorRegistry" ref="fieldProcessorRegistry" />
		<property name="serviceRegistry" ref="ServiceRegistry" />
		<property name="nodeInfoFactory" ref="NodeInfoFactory" />
		<property name="templateNameField" value="template" />
	</bean>
	
	<bean id="nodeNumberFilterRegistry" class="org.alfresco.repo.forms.processor.FilterRegistry" />
	<bean id="typeNumberFilterRegistry" class="org.alfresco.repo.forms.processor.FilterRegistry" />
	
	<bean name="nodeNumberFormProcessor" 
		class="ru.citeck.ecos.form.NodeNumberFormProcessor"
		parent="abstractNumberFormProcessor">
		<property name="matchPattern" value="node-number" />
		<property name="filterRegistry" ref="nodeNumberFilterRegistry" />
	</bean>
	
	<bean name="typeNumberFormProcessor" 
		class="ru.citeck.ecos.form.TypeNumberFormProcessor"
		parent="abstractNumberFormProcessor">
		<property name="matchPattern" value="type-number" />
		<property name="filterRegistry" ref="typeNumberFilterRegistry" />
	</bean>


    <bean id="duplicatorFilterRegistry" class="org.alfresco.repo.forms.processor.FilterRegistry" />

    <bean id="dFileUploadSupportCreateFilter" parent="FileUploadSupportCreateFilter">
        <property name="filterRegistry" ref="duplicatorFilterRegistry" />
    </bean>
    <bean id="dTemplateTypeFormFilter" parent="templateTypeFormFilter">
        <property name="filterRegistry" ref="duplicatorFilterRegistry" />
    </bean>
    <bean id="dChildAssociationsFilesCreateFilter" parent="ChildAssociationsFilesCreateFilter">
        <property name="filterRegistry" ref="duplicatorFilterRegistry" />
    </bean>

    <bean id="duplicatorFormProcessor"
          class="ru.citeck.ecos.form.DuplicatorFormProcessor"
          parent="baseFormProcessor">
        <property name="matchPattern" value="duplicate-node" />
        <property name="filterRegistry" ref="duplicatorFilterRegistry" />
        <!--property name="builderRegistry" ref="FormNodeBuilderRegistry" /-->
    </bean>
	



	<!--==============================================================-->
	<!--                 Supplementary files services                 -->
	<!--==============================================================-->

	<bean id="supplementaryFilesDAO.assoc"
			class="ru.citeck.ecos.document.SupplementaryFilesDAOAssocImpl"
			init-method="init">
		<property name="nodeService" ref="NodeService" />
		<property name="namespaceService" ref="NamespaceService" />
		<property name="assocTypeName" value="dms:agreement_to_files" />
	</bean>
	
	<bean id="supplementaryFilesDAO.child"
			class="ru.citeck.ecos.document.SupplementaryFilesDAOChildImpl"
			init-method="init">
		<property name="nodeService" ref="NodeService" />
		<property name="namespaceService" ref="NamespaceService" />
		<property name="assocTypeName" value="dms:supplementaryFiles" />
		<property name="aspectTypeName" value="dms:hasSupplementaryFiles" />
	</bean>
	
	<alias name="supplementaryFilesDAO.${supplementary-files.impl}" alias="supplementaryFilesDAO" />
	
	<bean id="supplementaryFilesMigration"
			class="ru.citeck.ecos.document.SupplementaryFilesMigration"
			parent="baseJavaScriptExtension">
		<property name="extensionName">
			<value>supplementaryFilesMigration</value>
		</property>
		<property name="nodeService" ref="NodeService" />
		<property name="daos">
			<map>
				<entry key="assoc" value-ref="supplementaryFilesDAO.assoc" />
				<entry key="child" value-ref="supplementaryFilesDAO.child" />
			</map>
		</property>
	</bean>

	<bean id="TemplateNodeService" 
			class="ru.citeck.ecos.template.TemplateNodeService" 
			parent="baseTemplateImplementation">
		<property name="extensionName" value="nodeService" />
		<property name="serviceRegistry" ref="ServiceRegistry" />
	</bean>

	<bean id="docxFreeMarkerProcessor"
			parent="baseTemplateProcessor"
			class="ru.citeck.ecos.template.DocxFreeMarkerProcessor">
		<property name="processor" ref="freeMarkerProcessor"/>
		<property name="name" value="wordDocument" />
		<property name="extension" value="docx" />
	</bean>

	<bean id="templateFormFilter" class="ru.citeck.ecos.template.TemplateFormFilter"
			parent="baseFormFilter" abstract="true">
		<property name="nodeService" ref="NodeService" />
		<property name="actionService" ref="actionService" />
	</bean>

	<bean id="contentFromTemplateGenerator" class="ru.citeck.ecos.template.ContentFromTemplateGeneratorImpl">
		<property name="contentService" ref="ContentService" />
		<property name="exceptionService" ref="citeckExceptionService" />
		<property name="nodeService" ref="NodeService" />
		<property name="templateService" ref="TemplateService" />
		<property name="versionService" ref="VersionService" />
		<property name="mimetypeService" ref="mimetypeService" />
	</bean>

	<bean name="contentFromTemplateGeneratorJS" class="ru.citeck.ecos.template.ContentFromTemplateGeneratorImplJS"
			parent="baseJavaScriptExtension">
		<property name="extensionName" value="contentFromTemplate" />
		<property name="contentFromTemplateGenerator" ref="contentFromTemplateGenerator" />
	</bean>

	<bean id="templateTypeFormFilter" parent="templateFormFilter">
		<property name="filterRegistry" ref="typeFilterRegistry" />
		<property name="createMode" value="true" />
	</bean>

	<bean id="templateNodeFormFilter" parent="templateFormFilter">
		<property name="filterRegistry" ref="nodeFilterRegistry" />
		<property name="createMode" value="false" />
	</bean>

    <bean id="ConfirmService" class="ru.citeck.ecos.confirm.ConfirmServiceImpl">
        <property name="authenticationService" ref="AuthenticationService"/>
        <property name="confirmConfigService" ref="confirmConfigService"/>
        <property name="namespaceService" ref="NamespaceService" />
        <property name="nodeService" ref="NodeService"/>
        <property name="versionService" ref="VersionService"/>
    </bean>

    <bean id="confirmersList" class="ru.citeck.ecos.confirm.ConfirmersList">
        <property name="templatePath" value="alfresco/templates/webscripts/ru/citeck/confirm/confirm-list.get.html.ftl"/>
        <property name="templateService" ref="TemplateService" />
        <property name="contentService" ref="ContentService" />
    </bean>

    <bean id="copyToAction" class="ru.citeck.ecos.behavior.common.documentlibrary.CopyToAction" parent="baseJavaScriptExtension">
        <property name="extensionName">
            <value>copyToActionService</value>
        </property>
        <property name="strategies">
            <list></list>
        </property>
    </bean>
    
     <bean id="CardTemplateService" class="ru.citeck.ecos.template.CardTemplateService">
        <property name="searchService" ref="searchService" />
        <property name="dictionaryService" ref="dictionaryService" />
        <property name="nodeService" ref="nodeService" />
     </bean>

    <bean id="scriptOwnerService" parent="baseJavaScriptExtension" class="ru.citeck.ecos.security.NodeOwnerDAO">
        <property name="extensionName">
            <value>ownerService</value>
        </property>
        <property name="nodeService" ref="nodeService" />
        <property name="ownableService" ref="ownableService" />
    </bean>

	<!-- Archive Service -->

	<bean id="citeckArchiveService" class="ru.citeck.ecos.archive.ArchiveServiceImpl" init-method="init" >
		<property name="policyComponent" ref="policyComponent" />
		<property name="nodeService" ref="nodeService" />
		<property name="tenantService" ref="tenantService" />
		<property name="storesToIgnorePolicies" ref="storesToIgnorePolicies" />
		<property name="searchService" ref="searchService" />
		<property name="dictionaryService" ref="dictionaryService" />
	</bean>

	<bean id="citeckArchiveServiceJS" class="ru.citeck.ecos.archive.ArchiveServiceJSImpl" parent="baseJavaScriptExtension" >
		<property name="extensionName" value="archiveService" />
		<property name="archiveService" ref="citeckArchiveService"/>
	</bean>

    <!-- Exception Service -->

    <bean id="citeckExceptionService"
            class="ru.citeck.ecos.exception.ExceptionServiceImpl"
            name="ExceptionService" >
        <property name="nodeService" ref="nodeService" />
    </bean>

    <!-- History Service -->

    <bean id="historyService" class="ru.citeck.ecos.history.HistoryService" >
        <property name="nodeService" ref="NodeService"/>
        <property name="authenticationService" ref="authenticationService"/>
        <property name="personService" ref="PersonService"/>
        <property name="searchService" ref="searchService"/>
        <property name="historyRoot" value="workspace://SpacesStore/history-events-root"/>
    </bean>

    <bean id="historyServiceJS" class="ru.citeck.ecos.history.HistoryServiceJS" parent="baseJavaScriptExtension">
        <property name="extensionName" value="historyService"/>
        <property name="historyService" ref="historyService"/>
        <property name="namespaceService" ref="namespaceService"/>
    </bean>

    <bean id="criteriaParser" class="ru.citeck.ecos.search.SearchCriteriaParser">
        <property name="criteriaFactory" ref="searchCriteriaFactory"/>
    </bean>

    <bean id="AssociationIndexPropertyRegistry" class="ru.citeck.ecos.search.AssociationIndexPropertyRegistry">
    </bean>
    
    <bean id="AssociationIndexPropertyRegistrar" class="ru.citeck.ecos.search.AssociationIndexPropertyRegistrar" abstract="true" init-method="init">
        <constructor-arg index="0" ref="AssociationIndexPropertyRegistry" />
    </bean>
    
    <bean id="luceneQueryBuilder" class="ru.citeck.ecos.search.LuceneQuery">
        <property name="namespaceService" ref="NamespaceService" />
        <property name="associationIndexPropertyRegistry" ref="AssociationIndexPropertyRegistry" />
    </bean>

	<bean id="JournalsChildAssociationsRegistrar" class="ru.citeck.ecos.form.ChildAssociationsRegistrar"
			depends-on="idocs.dictionaryBootstrap" init-method="init">
		<property name="childAssociationsFormFilters" >
			<list>
				<ref bean="ChildAssociationsFilesCreateFilter" />
				<ref bean="ChildAssociationsFilesEditFilter" />
			</list>
		</property>
		<property name="associations">
			<list>
				<value>journal:createVariants</value>
				<value>journal:searchCriteria</value>
			</list>
		</property>
	</bean>

    <bean id="sortFieldChanger" class="ru.citeck.ecos.search.SortFieldChanger">
        <property name="changeFieldMap">
            <map>
                <entry key="pecatt:number" value="pecatt:numberSort" />
                <entry key="pecattdl:registryIndividualNumber" value="pecattdl:registryIndividualNumberSort" />
            </map>
        </property>
    </bean>

    <bean id="criteriaSearchService" class="ru.citeck.ecos.search.CriteriaSearchService">
        <property name="searchService" ref="SearchService"/>
        <property name="queryBuilders">
            <list value-type="ru.citeck.ecos.search.SearchQueryBuilder">
                <ref bean="luceneQueryBuilder"/>
            </list>
        </property>
        <property name="dictionaryService" ref="DictionaryService" />
        <property name="namespaceService" ref="NamespaceService" />
        <property name="associationIndexPropertyRegistry" ref="AssociationIndexPropertyRegistry" />
        <property name="sortFieldChanger" ref="sortFieldChanger"/>
    </bean>

    <bean id="searchCriteriaFactory" class="ru.citeck.ecos.search.SearchCriteriaFactory">
        <property name="serviceRegistry" ref="ServiceRegistry"/>
    </bean>

    <bean id="VersionsCommentFormEditFilter" class="ru.citeck.ecos.template.VersionsCommentFormFilter" parent="baseFormFilter">
        <property name="filterRegistry" ref="nodeFilterRegistry" />
        <property name="nodeService" ref="NodeService" />
        <property name="versionService" ref="VersionService" />
    </bean>

	<bean id="CiteckUtilsJS" class="ru.citeck.ecos.utils.CiteckUtilsJS" parent="baseJavaScriptExtension">
		<property name="extensionName" value="citeckUtils" />
		<property name="serviceRegistry" ref="ServiceRegistry" />
	</bean>

	<bean id="toolMigrateVersion" parent="baseJavaScriptExtension" class="ru.citeck.ecos.workflow.activiti.ProcessDefinitionMigrateVersion">
		<property name="extensionName" value="processDefinitionVersion" />
		<property name="workflowService" ref="WorkflowService" />
	</bean>
	
	<!-- transfer bean factory -->
	<bean class="ru.citeck.ecos.utils.ConvertUtils" />

	<bean id="mailActionExecuterInterceptor" class="ru.citeck.ecos.notification.MailActionExecuterInterceptor">
		<!--property name="mailService" ref="mailService" /-->
		<property name="nodeService" ref="NodeService" />
		<property name="nodeInfoFactory" ref="NodeInfoFactory"/>
		<property name="authorityService" ref="authorityService"/>
		<property name="workflowMirrorService" ref="workflowMirrorService"/>
		<property name="notificationLoggingRoot" value="workspace://SpacesStore/notification-logging-root" />
		<property name="notificationLoggingAssoc" value="{http://www.alfresco.org/model/content/1.0}contains" />
		<property name="workflowService" ref="WorkflowService" />
	</bean>
	
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>mail</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<idref bean="mailActionExecuterInterceptor" />
			</list>
		</property>
	</bean>
	
	<bean id="NotificationForLoggingItemSender" class="ru.citeck.ecos.notification.NotificationForLoggingItemSender">
		<property name="serviceRegistry" ref="ServiceRegistry" />
	</bean>
	
	<bean id="ReportWithAttachmentSender" class="ru.citeck.ecos.notification.ReportWithAttachmentSender">
		<property name="serviceRegistry" ref="ServiceRegistry" />
	</bean>

	<!--bean id="mail" class="ru.citeck.ecos.notification.MailAttachActionExecutor" parent="action-executer">
		<property name="contentService" ref="ContentService" />

        <property name="mailService">
            <ref bean="mailService"></ref>
        </property>
        <property name="nodeService">
            <ref bean="nodeService"></ref>
        </property>
		<property name="templateService">
			<ref bean="templateService"></ref>
		</property>
        <property name="personService">
            <ref bean="personService"></ref>
        </property>
        <property name="authenticationService">
            <ref bean="authenticationService"></ref>
        </property>
        <property name="authorityService">
            <ref bean="authorityService"></ref>
        </property>
        <property name="serviceRegistry">
            <ref bean="ServiceRegistry"></ref>
        </property>
        <property name="headerEncoding">
            <value>${mail.header}</value>
        </property>
        <property name="fromAddress">
            <value>${mail.from.default}</value>
        </property>
        <property name="fromEnabled">
            <value>${mail.from.enabled}</value>
        </property>
        <property name="sysAdminParams">
            <ref bean="sysAdminParams"></ref>
        </property>
        <property name="sendTestMessage">
            <value>${mail.testmessage.send}</value>
        </property>
        <property name="testMessageTo">
            <value>${mail.testmessage.to}</value>
        </property>
        <property name="testMessageSubject">
            <value>${mail.testmessage.subject}</value>
        </property>
        <property name="testMessageText">
            <value>${mail.testmessage.text}</value>
        </property>
	</bean-->
	
	<!--bean id="BusinessCalendar" class="ru.citeck.ecos.calendar.BusinessCalendar">
		<property name="searchService" ref="searchService" />
	</bean-->

	<bean id="BusinessCalendarJS" class="ru.citeck.ecos.calendar.BusinessCalendarJS" parent="baseJavaScriptExtension">
		<property name="extensionName" value="businessCalendar" />
		<property name="searchService" ref="searchService" />
	</bean>
	
</beans>
